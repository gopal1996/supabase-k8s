apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.1 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: kong
  name: kong
  namespace: supabase-pg
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kong
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.1 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: kong
    spec:
      containers:
        - env:
            - name: KONG_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: sb-kong-config
                  key: KONG_DATABASE
            - name: KONG_DECLARATIVE_CONFIG
              valueFrom:
                configMapKeyRef:
                  name: sb-kong-config
                  key: KONG_DECLARATIVE_CONFIG
            - name: KONG_DNS_ORDER
              valueFrom:
                configMapKeyRef:
                  name: sb-kong-config
                  key: KONG_DNS_ORDER
            - name: KONG_PLUGINS
              valueFrom:
                configMapKeyRef:
                  name: sb-kong-config
                  key: KONG_PLUGINS
          image: kong:2.8.1
          name: supabase-kong
          ports:
            - containerPort: 8000
            - containerPort: 8443
          resources: {}
          volumeMounts:
            - name: config-volume
              mountPath: /var/lib/kong/kong.yml
              subPath: kong.yml
      restartPolicy: Always
      volumes:
        - name: config-volume
          configMap:
            name: sb-kong-config
            items:
              - key: kong.yml
                path: kong.yml
status: {}
